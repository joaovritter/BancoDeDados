CREATE DATABASE EMPRESA;
USE EMPRESA;
--Criação da tabela FUNCIONARIO
GO
CREATE TABLE FUNCIONARIO (
	Pnome VARCHAR(15) NOT NULL,
    Minicial CHAR,
    Unome VARCHAR(15) NOT NULL,
    Cpf CHAR(11),
    Datanasc DATE,
    Endereco VARCHAR(255),
    Sexo CHAR,
    Salario DECIMAL(10,2),
    Cpf_supervisor CHAR(11),
    Dnr INT,
    PRIMARY KEY (Cpf),
    FOREIGN KEY (Cpf_supervisor) REFERENCES FUNCIONARIO(Cpf)
);
GO

--Tablea de DEPARTAMENTO
CREATE TABLE DEPARTAMENTO (
	Dnome VARCHAR(15) NOT NULL,
    Dnumero INT,
    Cpf_gerente CHAR(11),
    Data_inicio_gerente DATE,
    PRIMARY KEY (Dnumero),
    UNIQUE (Dnome),
    FOREIGN KEY (Cpf_gerente) REFERENCES FUNCIONARIO(CPF)
);
GO
--Adiconando restição referencial em FUNCIONARO de DEPARTAMENTO
--Criando uma ALTERAÇÃO de Tabela
ALTER TABLE FUNCIONARIO
ADD CONSTRAINT Dnr
FOREIGN KEY (Dnr) REFERENCES DEPARTAMENTO (Dnumero);

GO
--Criação da tabela de LOCALIZACAO_DEP

CREATE TABLE LOCALIZACAO_DEP (
	Dnumero INT NOT NULL,
	Dlocal VARCHAR (15) NOT NULL,
    PRIMARY KEY (Dnumero, Dlocal),
    FOREIGN KEY (Dnumero) REFERENCES DEPARTAMENTO (Dnumero)
);

GO
--Criacao da tabela PROJETO
CREATE TABLE PROJETO(
	Projnome VARCHAR (15) NOT NULL,
	Projnumero INT NOT NULL,
    Projlocal VARCHAR(15),
    Dnum INT,
    PRIMARY KEY (Projnumero),
    UNIQUE (Projnome),
    FOREIGN KEY (Dnum) REFERENCES DEPARTAMENTO (Dnumero)
);
GO
--Criação da tabela TRABALHA_EM
CREATE TABLE TRABALHA_EM(
	Fcpf CHAR(11) NOT NULL,
    Pnr INT NOT NULL,
    Horas DECIMAL (3,1) NOT NULL,
    PRIMARy KEY (Fcpf, Pnr),
    FOREIGN KEY (Fcpf) REFERENCES FUNCIONARIO (Cpf),
    FOREIGN KEY (Pnr) REFERENCES PROJETO(Projnumero)
);


--Criação da tabela DEPENDENTE sem seleção do esquema
CREATE TABLE DEPENDENTE(
	Fcpf CHAR(11) NOT NULL,
    Nome_dependente VARCHAR(15) NOT NULL,
    Sexo CHAR,
    Datanasc DATE,
    Parentesco VARCHAR(8),
    PRIMARY KEY (Fcpf, Nome_dependente),
    FOREIGN KEY (Fcpf) REFERENCES FUNCIONARIO(Cpf)
);

--Inserindo valores no Departamento
INSERT INTO DEPARTAMENTO (Dnome, Dnumero) VALUES('Pesquisa', 5);
INSERT INTO DEPARTAMENTO (Dnome, Dnumero) VALUES('Administração', 4);
INSERT INTO DEPARTAMENTO (Dnome, Dnumero) VALUES('Matriz', 1);
SELECT * FROM DEPARTAMENTO;
--Inserindo funcionarios com cargo de gerencia DATE AAAA-MM-DD
INSERT INTO FUNCIONARIO VALUES ( 'Jorge', 'E', 'Brito', '88866555576', '1937-11-10', 'Rua do Horto, 35, São Paulo, SP', 'M', 55000, NULL , 1 );
INSERT INTO FUNCIONARIO VALUES ( 'Jennifer', 'S', 'Souza', '98765432168', '1941-06-20', 'Av Arthur de Lima, 54, Santo André, SP', 'F', 43000, '88866555576' , 4 );
INSERT INTO FUNCIONARIO VALUES ( 'Fernando', 'T', 'Wong', '33344555587', '1955-12-08', 'Rua da Lapa, 34, São Paulo, SP', 'M', 40000, '88866555576' , 5 );
INSERT INTO FUNCIONARIO VALUES ( 'João', 'B', 'Silva', '12345678966', '1965-01-09', 'Rua das Flores, 751, São Paulo, SP', 'M', 30000, '33344555587' , 5 );
INSERT INTO FUNCIONARIO VALUES ( 'Alice', 'J', 'Zelaya', '99988777767', '1968-01-19', 'Rua Souza Lima, 35, Curitiba, PR', 'F', 25000, '98765432168' , 4 );
INSERT INTO FUNCIONARIO VALUES ( 'Ronaldo', 'K', 'Lima', '66688444476', '1962-09-15', 'Rua Rebouças, 65, Piracicaba, SP', 'M', 38000, '33344555587' , 5 );
INSERT INTO FUNCIONARIO VALUES ( 'Joice', 'A', 'Leite', '45345345376', '1972-07-31', 'Av. Lucas Obes, 74, São Paulo, SP', 'F', 25000, '33344555587' , 5 );
INSERT INTO FUNCIONARIO VALUES ( 'André', 'E', 'Brito', '98798798733', '1969-03-29', 'Rua Timbira, 35, São Paulo, SP', 'M', 25000, '98765432168' , 4 );

--Corrigindo erro de inserção
UPDATE FUNCIONARIO
SET Endereco = 'Rua Reboucas, 65, Piracicaba, SP'
WHERE Cpf = '66688444476';
--Recupera todas as informações de funcionários
SELECT * FROM FUNCIONARIO;

--Finzalindo o preenchimento da tabela DEPTARTAMENTO
UPDATE DEPARTAMENTO
SET Cpf_gerente = '33344555587', Data_inicio_gerente = '1988-05-22'
WHERE Dnumero = 5;
UPDATE DEPARTAMENTO
SET Cpf_gerente = '98765432168', Data_inicio_gerente = '1995-01-01'
WHERE Dnumero = 4;
UPDATE DEPARTAMENTO
SET Cpf_gerente = '88866555576', Data_inicio_gerente = '1981-06-19'
WHERE Dnumero = 1;
--Recuperar todas as informações de departamento
SELECT * FROM DEPARTAMENTO;

--Prrencher a tabela LOCALIZACAO_DEP
INSERT INTO LOCALIZACAO_DEP VALUES (1, 'São Paulo');
INSERT INTO LOCALIZACAO_DEP VALUES (4, 'Mauá');
INSERT INTO LOCALIZACAO_DEP VALUES (5, 'Santo André');
INSERT INTO LOCALIZACAO_DEP VALUES (5, 'Itu');
INSERT INTO LOCALIZACAO_DEP VALUES (5, 'São Paulo');
--Recuperando informações de LOCALIZACAO_DEP
SELECT * FROM LOCALIZACAO_DEP;

--Preenchendo a table PROJETO
INSERT INTO PROJETO VALUES ('ProdutoX', 1, 'Santo André', 5);
INSERT INTO PROJETO VALUES ('ProdutoY', 2, 'Itu', 5);
INSERT INTO PROJETO VALUES ('ProdutoZ', 3, 'São Paulo', 5);
INSERT INTO PROJETO VALUES ('Informatização', 10, 'Mauá', 4);
INSERT INTO PROJETO VALUES ('Reorganização', 20, 'São Paulo', 1);
INSERT INTO PROJETO VALUES ('Novosbenefícios', 30, 'Mauá', 4);
--Recuperando informações de PROJETO
SELECT * FROM PROJETO;

--Preenchento TRABALHA_EM
INSERT INTO TRABALHA_EM VALUES ('12345678966',1,32.5);
INSERT INTO TRABALHA_EM VALUES ('12345678966',2,7.5);
INSERT INTO TRABALHA_EM VALUES ('66688444476',3,40);
INSERT INTO TRABALHA_EM VALUES ('45345345376',1,20);
INSERT INTO TRABALHA_EM VALUES ('45345345376',2,20);
INSERT INTO TRABALHA_EM VALUES ('33344555587',2,10);
INSERT INTO TRABALHA_EM VALUES ('33344555587',3,10);
INSERT INTO TRABALHA_EM VALUES ('33344555587',10,10);
INSERT INTO TRABALHA_EM VALUES ('33344555587',20,10);
INSERT INTO TRABALHA_EM VALUES ('99988777767',10,10);
INSERT INTO TRABALHA_EM VALUES ('99988777767',30,30);
INSERT INTO TRABALHA_EM VALUES ('98798798733',10,35);
INSERT INTO TRABALHA_EM VALUES ('98798798733',30,5);
INSERT INTO TRABALHA_EM VALUES ('98765432168',30,20);
INSERT INTO TRABALHA_EM VALUES ('98765432168',20,15);

--Preenchendo a tabela de DEPENDENTES
INSERT INTO DEPENDENTE VALUES ('33344555587', 'Alicia', 'F', '1986-04-05', 'Filha');
INSERT INTO DEPENDENTE VALUES ('33344555587', 'Tiago', 'M', '1983-10-25', 'Filh0');
INSERT INTO DEPENDENTE VALUES ('33344555587', 'Janaina', 'F', '1958-05-03', 'Eposa');
INSERT INTO DEPENDENTE VALUES ('98765432168', 'Antonio', 'M', '1942-02-28', 'Marido');
INSERT INTO DEPENDENTE VALUES ('12345678966', 'Michael', 'M', '1988-01-04', 'Filho');
INSERT INTO DEPENDENTE VALUES ('12345678966', 'Alicia', 'F', '1988-12-30', 'Filha');
INSERT INTO DEPENDENTE VALUES ('12345678966', 'Elizabeth', 'F', '1967-05-05', 'Esposa');

SELECT DISTINCT SALARIO
FROM FUNCIONARIO;

--WHERE
SELECT *
FROM FUNCIONARIO
WHERE Pnome = 'João';

--AND
SELECT*
FROM FUNCIONARIO
WHERE Sexo = 'M' AND Salario >= 30000;

--OR
SELECT*
FROM FUNCIONARIO
WHERE Endereco LIKE '%São Paulo%' OR Endereco LIKE '%Curitiba%';

--NOT
SELECT *
FROM FUNCIONARIO
WHERE NOT Endereco LIKE '%São Paulo%';

--ORDER BY
SELECT *
FROM FUNCIONARIO
ORDER BY Salario DESC;

--NULL
SELECT*
FROM FUNCIONARIO
WHERE Cpf_supervisor IS NULL;

--NOT NULL
SELECT*
FROM FUNCIONARIO
WHERE Cpf_supervisor IS NOT NULL;

--TOP
SELECT TOP 3*
FROM FUNCIONARIO
ORDER BY Salario DESC;

--MIN
SELECT MIN(SALARIO)
FROM FUNCIONARIO;
--OU TAMBEM
SELECT*
FROM FUNCIONARIO
WHERE Salario =  (
	SELECT MIN(SALARIO) 
	FROM FUNCIONARIO
	);
--CRIANDO VARIAVEIS
DECLARE @Salario_Min DECIMAL(10,2);

SET @Salario_Min = (
	SELECT MIN(SALARIO)
	FROM FUNCIONARIO
);

SELECT*
FROM FUNCIONARIO
WHERE Salario = @Salario_Min;


--MAX
SELECT*
FROM FUNCIONARIO
WHERE Salario = (
	SELECT MAX(Salario)
	FROM FUNCIONARIO
	);
--PODE-SE USAR OS MESMO MESTODOS QUE FORAM USADOS EM MIN

--COUNT
SELECT COUNT(PNOME)
FROM FUNCIONARIO;

--AVG OU MEDIA
SELECT AVG(SALARIO)
FROM FUNCIONARIO;

--QUANTO JORGE GANHA A  MAIS DO QUE A MEDIA DE SALARIOS
--COMO NÃO FAZER
SELECT ( SELECT SALARIO
		 FROM FUNCIONARIO
		 WHERE Pnome = 'Jorge')- (SELECT AVG(Salario)
								  FROM FUNCIONARIO);
--O CERTO
DECLARE @Salario_AVG DECIMAL(10,2);
SET @Salario_AVG = (SELECT AVG(Salario)
				   FROM FUNCIONARIO);

DECLARE @Salario_MAX DECIMAL(10,2);
SET @Salario_MAX = (SELECT MAX(Salario)
					FROM FUNCIONARIO);
PRINT 'A diferença de salarios è: ' + CAST((@Salario_MAX - @Salario_AVG) AS VARCHAR(10));

--LIKE
SELECT*
FROM FUNCIONARIO
WHERE Datanasc LIKE '__72%';

--IN
SELECT*
FROM FUNCIONARIO
WHERE Salario IN (25000, 30000);

--SELECT ALINHADO

SELECT *
FROM FUNCIONARIO
WHERE Pnome = 'Fernando';

SELECT*
FROM TRABALHA_EM
WHERE Fcpf = '33344555587';

DECLARE @Cpf_Funcionario CHAR(11);
SET @Cpf_Funcionario = (SELECT Cpf
						FROM FUNCIONARIO
						WHERE Pnome = 'Fernando');

SELECT  DISTINCT CONCAT(F.Pnome, ' ', F.Minicial,' ',F.Unome) AS 'NOME'
FROM TRABALHA_EM AS T, FUNCIONARIO AS F
WHERE CONCAT(Pnr, Horas) IN (SELECT CONCAT(Pnr, Horas)
							FROM TRABALHA_EM
							WHERE Fcpf = @Cpf_Funcionario)
AND Fcpf <> @Cpf_Funcionario
AND T.Fcpf = F.Cpf; 

--SEM DECLARAÇÃO
SELECT  DISTINCT CONCAT(F.Pnome, ' ', F.Minicial,' ',F.Unome) AS 'NOME'
FROM TRABALHA_EM AS T, FUNCIONARIO AS F
WHERE CONCAT(Pnr, Horas) IN (SELECT CONCAT(Pnr, Horas)
							FROM TRABALHA_EM
							WHERE Fcpf = (SELECT Cpf
										FROM FUNCIONARIO
										WHERE Pnome = 'Fernando'))
AND Fcpf <> '33344555587'
AND T.Fcpf = F.Cpf;

--OUTRO MODO

SELECT DISTINCT  F.Pnome, F.Minicial, F.Unome
FROM TRABALHA_EM AS T1, TRABALHA_EM AS T2 , FUNCIONARIO AS F
WHERE T1.Pnr = T2.Pnr
AND T1.Horas = T2.Horas
AND T2.Fcpf = '33344555587'
AND T1.Fcpf <> '33344555587';


--OUTRO MODO
SELECT DISTINCT T1.Fcpf
FROM TRABALHA_EM AS T1
JOIN TRABALHA_EM AS T2
ON T1.Pnr = T2.Pnr
AND T1.Horas = T2.Horas
AND T2.Fcpf = '33344555587';

SELECT F.*
FROM FUNCIONARIO AS F
JOIN TRABALHA_EM AS T ON T.Fcpf = F.Cpf
JOIN TRABALHA_EM AS T2 ON T.Pnr = T2.Pnr AND T.Horas = T2.Horas
JOIN FUNCIONARIO AS F2 ON T2.Fcpf = F2.Cpf
WHERE F2.Pnome = 'Fernando'
AND F.Pnome <> 'Fernando';

--BETWEEN

SELECT*
FROM FUNCIONARIO AS F
WHERE F.Dnr = 5 AND F.Salario BETWEEN  30000 AND 40000;

--ALIASES

SELECT DISTINCT  F.Pnome AS 'NOME', F.Minicial AS 'INICIAL', F.Unome 'SOBENOME'
FROM FUNCIONARIO AS F;

--OU

SELECT  DISTINCT CONCAT(F.Pnome, ' ', F.Minicial,' ',F.Unome) AS 'NOME COMPLETO'
FROM FUNCIONARIO AS F;

SELECT DISTINCT CONCAT(F.Pnome, ' ', F.Minicial,' ',F.Unome) AS 'NOME COMPLETO'
FROM FUNCIONARIO AS F
JOIN DEPARTAMENTO AS D
ON F.Dnr = D.Dnumero
WHERE D.Dnome = 'Pesquisa';

--OU

SELECT DISTINCT CONCAT(F.Pnome, ' ', F.Minicial,' ',F.Unome) AS 'NOME COMPLETO'
FROM FUNCIONARIO AS F, DEPARTAMENTO AS D
WHERE F.Dnr = D.Dnumero AND D.Dnome = 'Pesquisa';

SELECT DISTINCT CONCAT(F.Pnome, ' ', F.Minicial,' ',F.Unome) AS 'NOME COMPLETO',GER.Pnome AS 'SUPERVISOR'
FROM FUNCIONARIO AS F
JOIN FUNCIONARIO AS GER
ON GER.Cpf = F.Cpf_supervisor;

-- INSERÇÃO DE NOVOS DADOS 

INSERT INTO FUNCIONARIO (Pnome, Minicial, Unome, Cpf, Datanasc, Endereco, Sexo, Salario)
VALUES('Carlos', 'M', 'Ferreira', '11122233311', '1980-02-15', 'AV. Medianeira, 555, Santa Maria, RS', 'M', 1000),
	  ('Mariana', 'L', 'Cortes', '22255588899', '1985-06-12', 'AV. Presidente Vargas, Santa Maria, RS', 'F', 32000),
	  ('Wendel', 'N', 'Rodrigues', '44466677788', '1999-03-26','Rua Venancio Aires, 2213, São Sepé, RS', 'M', 58000);

INSERT INTO DEPARTAMENTO (Dnome, Dnumero)
VALUES ('Vendas', 6),
	   ('RH', 7),
	   ('TI', 8);

-- INNER JOIN

--FUNCIONARIOS QUE PUSSUEM DEPARTAMENTO...
SELECT F.Pnome AS 'NOMES', D.Dnome AS 'DEPARTAMENTO'
FROM FUNCIONARIO AS F 
INNER JOIN DEPARTAMENTO AS D
ON F.Dnr = D.Dnumero;

-- PRIMEIRO E ULTIO NOME DOS FUNCIONARIOS DO DEPARTAMENTO DE PESQUISA 
SELECT F.Pnome AS 'NOMES',F.Unome AS 'SOBRENOME', F.Endereco, D.Dnome AS 'DEPARTAMENTO'
FROM FUNCIONARIO AS F
INNER JOIN DEPARTAMENTO AS D
ON F.Dnr = D.Dnumero
WHERE D.Dnome = 'Pesquisa';

--LISTE OS FUNCIONARIOS DO PRODUTOX
SELECT*
FROM FUNCIONARIO AS F
INNER JOIN TRABALHA_EM AS T
ON T.Fcpf = F.Cpf
INNER JOIN PROJETO AS P
ON P.Projnumero = T.Pnr
WHERE P.Projnome = 'ProdutoX';

--PROJETO LOCALIZADO EM MAUA , NUMERO DO PROJETO, SOBRENOME ENDEREÇO E DAT DE NASCIMENTO DO GERENTE
SELECT F.Unome AS 'SOBRENOME', F.Endereco, F.Datanasc AS 'DATA', P.Dnum AS 'PROJETO', D.Dnumero AS 'DEPARTAMENTO'
FROM FUNCIONARIO AS F 
JOIN DEPARTAMENTO AS D
ON F.Cpf = D.Cpf_gerente
JOIN PROJETO AS P 
ON P.Dnum = D.Dnumero
WHERE P.Projlocal = 'Mauá';

--FUNCIONARIOS COM E SEM DEPARTAMENTO
SELECT F.*, D.*
FROM FUNCIONARIO AS F
LEFT JOIN DEPARTAMENTO AS D
ON F.Dnr = D.Dnumero
ORDER BY F.Pnome ASC;

--ENCONTRE OS FUNCIONARIOS SEM DEPARTAMENTO
SELECT*
FROM FUNCIONARIO AS F 
LEFT JOIN DEPARTAMENTO AS D 
ON F.Dnr = D.Dnumero
WHERE F.Dnr IS NULL;

--ENCONTRE OS DEPARTAMENTOS SEM FUNCIONARIO 
--USANDO LEFT
SELECT*
FROM DEPARTAMENTO AS D 
LEFT JOIN FUNCIONARIO AS F 
ON F.Dnr = D.Dnumero
WHERE F.Dnr IS NULL;

--OU
--USANDO RIGHT
SELECT*
FROM FUNCIONARIO AS F 
RIGHT JOIN DEPARTAMENTO AS D 
ON F.Dnr = D.Dnumero
WHERE F.Dnr IS NULL;

--OU
--USANDO NOT NULL
SELECT D.*
FROM DEPARTAMENTO AS D
WHERE D.Dnumero NOT IN (SELECT Dnr 
						FROM FUNCIONARIO
						WHERE Dnr IS NOT NULL);

--OU
--USANDO NOT EXISTS
SELECT*
FROM DEPARTAMENTO AS D 
WHERE NOT EXISTS (SELECT 1 
				  FROM FUNCIONARIO AS F 
				  WHERE F.Dnr = D.Dnumero);

--FULL JOIN
SELECT*
FROM FUNCIONARIO AS F
FULL JOIN DEPARTAMENTO AS D
ON F.Dnr = D.Dnumero;

--UNION
SELECT ProjNome AS 'NOME'
FROM PROJETO
UNION
SELECT Dnome AS 'NOME'
FROM DEPARTAMENTO;

--INTERSECT
--PEGAR O CPF DE FUNCIONARIOS QUE TAMBEM SÃO GERENTES
SELECT Cpf
FROM FUNCIONARIO

INTERSECT

SELECT Cpf_Gerente
FROM DEPARTAMENTO;

--EXCEPT
--PEGAR O CPF DE FUNCIONARIOS QUE NÃO SÃO GERENTES
SELECT Cpf
FROM FUNCIONARIO

EXCEPT

SELECT Cpf_Gerente
FROM DEPARTAMENTO;

--GROUP BY + COUNT
--QUANTO FUNCIONARIOS TEM POR DEPARTAMENTO
SELECT D.Dnome AS 'DEPARTAMENTO', COUNT(F.Cpf) AS 'NUM. FUNCIONARIOS'
FROM FUNCIONARIO AS F
JOIN DEPARTAMENTO AS D 
ON F.Dnr = D.Dnumero
GROUP BY D.Dnome;

--SOMAR O SALARIO POR DEPARTAMENTO
SELECT D.Dnome AS 'DEPARTAMENTO', SUM(F.Salario) AS 'SOMA SALARIO'
FROM FUNCIONARIO AS F
JOIN DEPARTAMENTO AS D 
ON F.Dnr = D.Dnumero
GROUP BY D.Dnome;

--MEDIA DE HORAS TRABALHADAS POR PROJETO
SELECT P.Projnome AS 'PROJETO', AVG(T.Horas) AS 'MEDIA HORAS'
FROM PROJETO AS P
JOIN TRABALHA_EM AS T
ON P.Projnumero = T.Pnr
GROUP BY P.Projnome;

--QUANTIDA DE FUNCIONARIOS POR SEXO
SELECT F.Sexo AS 'SEXO', COUNT(F.Cpf) AS 'FUNCIONARIO'
FROM FUNCIONARIO AS F
GROUP BY F.Sexo;

--QUANTIDADE DE PROJETO POR LOCAL
SELECT P.Projlocal AS 'PROJETO', COUNT(*) AS 'LOCAL'
FROM PROJETO AS P
GROUP BY P.Projlocal;

-- HAVING
--ENCONTRE OS EPARTAMENTO COM MAIS DE 3 FUNCIONARIOS
SELECT D.Dnome AS 'DEPARTAMENTOS', COUNT(F.Cpf) AS 'FUNCIONARIOS'
FROM DEPARTAMENTO AS D
JOIN FUNCIONARIO AS F
ON F.Dnr = D.Dnumero
GROUP BY D.Dnome
HAVING COUNT(F.Cpf) > 3
ORDER BY D.Dnome ASC;

--ENCONTRAR OS TRABALHOS QUE EXIGEM + DE 50 HORAS
SELECT P.Projnome AS 'PROJETO', SUM(T.Horas) AS 'HORAS'
FROM PROJETO AS P
JOIN TRABALHA_EM AS T
ON P.Projnumero = T.Pnr
GROUP BY P.Projnome
HAVING SUM(T.Horas) > 50
ORDER BY P.Projnome ASC;

--EXISTS
--FUNCIONARIOS QUE SÃO GERENTES 
SELECT F.*
FROM FUNCIONARIO AS F
JOIN DEPARTAMENTO AS D
ON F.Cpf = D.Cpf_gerente
WHERE EXISTS (SELECT 1 FROM DEPARTAMENTO AS D WHERE D.Cpf_gerente = F.Cpf );